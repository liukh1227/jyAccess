<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.access.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.jy.entity.po.Customer">
    <id column="customer_Id" jdbcType="VARCHAR" property="customer_Id" />
    <result column="customerName" jdbcType="VARCHAR" property="customerName" />
    <result column="cusLinkman" jdbcType="VARCHAR" property="cusLinkman" />
    <result column="companyId" jdbcType="VARCHAR" property="companyId" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <resultMap id="CustomerVoResultMap" type="com.jy.entity.vo.CustomerVo" extends="BaseResultMap">
  <result column="companyName" jdbcType="VARCHAR" property="companyName" />
  </resultMap>
  <resultMap id="CustomerBoResultMap" type="com.jy.entity.bo.CustomerBo" extends="CustomerVoResultMap" >
  <collection property="bankAccountLists" ofType="com.jy.entity.po.BankAccount">
  <id column="bankAccount_Id" jdbcType="VARCHAR" property="bankAccount_Id" />
    <result column="bankName" jdbcType="VARCHAR" property="bankName" />
    <result column="bankAccountNum" jdbcType="VARCHAR" property="bankAccountNum" />
    <result column="bankAccountName" jdbcType="VARCHAR" property="bankAccountName" />
    <result column="bankStatus" jdbcType="VARCHAR" property="status" />
    <result column="bankCreator" jdbcType="VARCHAR" property="creator" />
    <result column="bankCreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="isDefault" jdbcType="BIT" property="isDefault" />
  </collection>
  </resultMap>
   <parameterMap type="com.jy.entity.po.Customer" id="CustomerParameterMap">
		<parameter property="customer_Id" resultMap="BaseResultMap" />
	</parameterMap>
  <sql id="Base_Column_List">
    customer_Id, customerName, companyId, cusLinkman,telephone, email, address, city, creator, createTime, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="CustomerVoResultMap">
   select customer.*,company.companyName as companyName
   from u_customer customer 
   LEFT JOIN u_company company on customer.companyId= company.company_Id
    where customer.customer_Id = #{customer_Id,jdbcType=VARCHAR}
  </select>
  <select id="selectCustomerAndBankAccountById" parameterMap="CustomerParameterMap" resultMap="CustomerBoResultMap" >
     select customer.*,company.companyName as companyName,bankaccount.bankAccount_Id as bankAccount_Id,bankaccount.bankName as bankName,bankaccount.bankAccountNum as bankAccountNum,bankaccount.bankAccountName as bankAccountName,
    bankaccount.status as bankStatus,bankaccount.creator as bankCreator,bankaccount.createTime as bankCreateTime,bankaccount.isDefault as isDefault
   from u_customer customer 
   LEFT JOIN u_company company on customer.companyId= company.company_Id
   LEFT JOIN u_bankaccount bankaccount on customer.customer_Id = bankaccount.customerId
    where customer.customer_Id = #{customer_Id,jdbcType=VARCHAR} order by  bankaccount.isDefault desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from u_customer
    where customer_Id = #{customer_Id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jy.entity.po.Customer">
    insert into u_customer (customer_Id, customerName, companyId, cusLinkman,
      telephone, email, address, 
      city, creator, createTime, 
      status)
    values (#{customer_Id,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, #{cusLinkman,jdbcType=VARCHAR},
      #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jy.entity.po.Customer" keyProperty="customer_Id">
		<selectKey keyProperty="customer_Id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
    insert into u_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customer_Id != null">
        customer_Id,
      </if>
      <if test="customerName != null">
        customerName,
      </if>
      <if test="companyId != null">
        companyId,
      </if>
      <if test="cusLinkman != null">
        cusLinkman,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customer_Id != null">
        #{customer_Id,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="cusLinkman != null">
        #{cusLinkman,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jy.entity.po.Customer">
    update u_customer
    <set>
      <if test="customerName != null">
        customerName = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        companyId = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where customer_Id = #{customer_Id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jy.entity.po.Customer">
    update u_customer
    set customerName = #{customerName,jdbcType=VARCHAR},
      companyId = #{companyId,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where customer_Id = #{customer_Id,jdbcType=VARCHAR}
  </update>
    <select id="getCustomerPageList" parameterType="com.jy.entity.form.CustomerQueryForm"
		resultMap="CustomerVoResultMap">
		select customer.*,company.companyName as companyName
          from   u_customer customer  LEFT JOIN u_company  company  on company.company_Id = customer.companyId
		<trim prefix="WHERE" prefixOverrides="AND |OR">
			<if test="customerName!=null">
				AND customer.customerName like CONCAT('%', '${customerName}', '%')
			</if>
			<if test="companyIdArray!=null and companyIdArray.length>0">
		         AND customer.companyId IN
		       <foreach collection="companyIdArray" item="item" index="index"  open="(" close=")" separator=",">
		          '${item}'
		        </foreach>
			</if>
			<if test="status!=null">
				AND customer.status = #{status}
			</if>
		</trim>
	</select>
    <select id="getCustomerAndBankAccountPageList" parameterType="com.jy.entity.form.CustomerQueryForm"
		resultMap="CustomerBoResultMap">
		      select customer.*,company.companyName as companyName,bankaccount.bankAccount_Id as bankAccount_Id,bankaccount.bankName as bankName,bankaccount.bankAccountNum as bankAccountNum,bankaccount.bankAccountName as bankAccountName,
              bankaccount.status as bankStatus,bankaccount.creator as bankCreator,bankaccount.createTime as bankCreateTime,bankaccount.isDefault as isDefault
              from u_customer customer 
              LEFT JOIN u_company company on customer.companyId= company.company_Id
              LEFT JOIN u_bankaccount bankaccount on customer.customer_Id = bankaccount.customerId
		<trim prefix="WHERE" prefixOverrides="AND |OR">
			<if test="customerName!=null">
				AND customer.customerName like CONCAT('%', '${customerName}', '%')
			</if>
			<if test="companyIdArray!=null and companyIdArray.length>0">
		         AND customer.companyId IN
		       <foreach collection="companyIdArray" item="item" index="index"  open="(" close=")" separator=",">
		          '${item}'
		        </foreach>
			</if>
			<if test="status!=null">
				AND customer.status = #{status}
			</if>
		</trim>
		order by  bankaccount.isDefault desc
	</select>
	    <select id="getAllCustomerlList" parameterType="com.jy.entity.form.CustomerQueryForm"
		resultMap="CustomerVoResultMap">
		select 
		  <include refid="Base_Column_List" />
          from  u_customer customer 
		<trim prefix="WHERE" prefixOverrides="AND |OR">
			<if test="customerName!=null">
				AND customerName like CONCAT('%', '${customerName}', '%')
			</if>
			<if test="companyIdArray!=null and companyIdArray.length>0">
		         AND companyId IN
		       <foreach collection="companyIdArray" item="item" index="index"  open="(" close=")" separator=",">
		          '${item}'
		        </foreach>
			</if>
			<if test="status!=null">
				AND customer.status = #{status}
			</if>
		</trim>
	</select>
</mapper>